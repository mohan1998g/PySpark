data = [(4001, 17), (4002, 45), (4003, 65), (4004, 30), (4005, 80)]

schema = ["userid", "age"]

df = spark.createDataFrame(data, schema)

df.show()

# Valid When Otherwise syntaxes are

agegroup = df.withColumn("age group", when(df['age'] < 18, 'Youth')
                         .when(df['age']>= 60, 'Senior').otherwise(("adult")))

agegroup.show()

agegroup1 = df.withColumn("age group", when(col('age') < 18, 'Youth')
                          .when(col('age')>= 60, 'Senior').otherwise(("adult")))
agegroup1.show()

# Invalid When Otherwise syntaxes are

# agegroup1 = df.withColumn("age group", when('age' < 18, 'Youth')
#                           .when('age'>= 60, 'Senior').otherwise(("adult")))

# The error is '<' not supported between instances of 'str' and 'int'

# agegroup1 = df.withColumn("age group", when("'age' < 18", 'Youth')
#                           .when("'age'>= 60", 'Senior').otherwise(("adult")))
#
# The error is [NOT_COLUMN] Argument `condition` should be a Column, got str.

# Sample data
data = [
        (1, "Prateek", 45),
        (2, "Vidya", 32),
        (3, "Vikash", 17),
        (4, "Srikanth", 48),
        (5, "Jatin", 29),
        (6, "Srinivas", 30)
]

# Create DataFrame
columns = ["id", "Name", "Marks"]
df = spark.createDataFrame(data, columns)

# Show the DataFrame
df.show()

grade = df.withColumn("grade", when(df['Marks'] > 40, 'A').when(df['Marks']> 30, 'B').otherwise('C'))

grade.show()


------------------------------------------------------------

# Define the schema
schema = StructType([
        StructField("emp_id", IntegerType(), True),
        StructField("emp_name", StringType(), True),
        StructField("salary", IntegerType(), True)
])

# Define the data
data = [
        (1, "Jhon", 4000),
        (2, "Tim David", 12000),
        (3, "Json Bhrendroff", 7000),
        (4, "Jordon", 8000),
        (5, "Green", 14000),
        (6, "Brewis", 6000)
]

# Create DataFrame
df = spark.createDataFrame(data, schema)

# Show DataFrame
df.show()

gradedf = df.withColumn("grade", when(col("salary")>10000, "A").when(col("salary") <5000, 'C').otherwise('B'))

gradedf.show()
